mixin piechart({perfect = 130, good = 65, satisfactorily = 65, disappoint = 0 } = {})
  -
    const circumference = 364.4;
    const total = perfect + good + satisfactorily + disappoint

    const percents = [
      disappoint / total,
      satisfactorily / total,
      good / total,
      perfect / total
    ]

    const styles = [
      'url(#grad-2)',
      'url(#grad-3)',
      'url(#grad-4)',
      'url(#grad-5)'
    ]

    const dashStrokes = [];
    const dashSpaces = [];
    const dashOffsets = [91.1];

    const strokes = [];
    const isEnableStrokes = [];
    percents.map((value, index) => {
      if (value === 0) {
        isEnableStrokes.push(false);
        dashStrokes.push(0);
        dashSpaces.push(0);
        if (index !== 0) {
          dashOffsets.push(dashOffsets[index - 1]);
        }
      } else if (value === 1) {
        isEnableStrokes.push(true);
        dashStrokes.push(circumference);
        dashSpaces.push(0);
        if (index !== 0) {
          dashOffsets.push(dashOffsets[index - 1]);
        }
      } else {
        isEnableStrokes.push(true);
        dashStrokes.push((circumference * value - 2).toFixed(1));
        dashSpaces.push((circumference - dashStrokes[index]).toFixed(1));
        if (index !== 0) {
          dashOffsets.push((dashOffsets[index - 1] - dashStrokes[index - 1] - 2).toFixed(1));
        }
      }
    })

    const text = ['голосов', 'голос', 'голоса']

  .piechart
    svg(width='120', height='120', viewbox='0 0 120 120', fill='none', class='piechart__chart')
      circle(cx='60', cy='60', r='59.5', fill='white')
      each isEnable, index in isEnableStrokes
        if isEnable
          circle(cx='60', cy='60', r='58', stroke=styles[index], stroke-width='4', Stroke-dasharray=`${dashStrokes[index]} ${dashSpaces[index]}`, stroke-dashoffset=dashOffsets[index])
      g( class='piechart__label')
        text(x='60', y='60', class='piechart__total') #{total}
        if (total === 0 || total > 4)
          text(x='60', y='60', class='piechart__text') #{text[0]}
        if (total === 1)
          text(x='60', y='60', class='piechart__text') #{text[1]}
        if (total > 1 && total < 5)
          text(x='60', y='60', class='piechart__text') #{text[2]}
      defs
        linearGradient(id='grad-5', x1='60', y1='0', x2='60', y2='120', gradientUnits='userSpaceOnUse')
          stop(offset='1', stop-color='#FFE39C')
          stop(offset='1', stop-color='#FFBA9C')
        linearGradient(id='grad-4', x1='0', y1='0', x2='0', y2='120', gradientUnits='userSpaceOnUse')
          stop(offset='1', stop-color='#66D2EA')
          stop(offset='1', stop-color='#6FCF97')
        linearGradient(id='grad-3', x1='0', y1='-120', x2='0', y2='120', gradientUnits='userSpaceOnUse')
          stop(offset='1', stop-color='#BC9CFF')
          stop(offset='1', stop-color='#8BA4F9')
        linearGradient(id='grad-2', x1='0', y1='-120', x2='0', y2='120', gradientUnits='userSpaceOnUse')
          stop(offset='1', stop-color='#919191')
          stop(offset='1', stop-color='#3D4975')
    .piechart__legend
      .piechart__legend-line
        .piechart__legend-circle.piechart__legend-circle_perfect
        p.piechart__rating Великолепно
      .piechart__legend-line
        .piechart__legend-circle.piechart__legend-circle_good
        p.piechart__rating Хорошо
      .piechart__legend-line
        .piechart__legend-circle.piechart__legend-circle_satisfactorily
        p.piechart__rating Удовлетворительно
      .piechart__legend-line
        .piechart__legend-circle.piechart__legend-circle_disappoint
        p.piechart__rating Разочарован
